var t=encodeURIComponent,r=decodeURIComponent,n="=";const e=(o=2,t=>{const r=(...n)=>n.length<o?(...t)=>r(...n,...t):t(...n);return r});var o;const u=t=>Object.prototype.toString.call(t).replace(/^\[object\s(.*)\]$/,"$1"),i=Object.keys,c=e((t,r)=>{if(r===t)return!0;const n=u(r),e=u(t);if("Array"===n&&"Array"===e){let n=r.length;if(n!==t.length)return!1;for(let e=0;e<n;e++)if(!c(t[e],r[e]))return!1;return!0}if("Object"===n&&"Object"===e){let n=i(r);if(n.length!==i(t).length)return!1;for(let e of n)if(!c(t[e],r[e]))return!1;return!0}return r!=r&&t!=t}),f=(s="split",(...t)=>r=>r[s](...t));var s;var l=e((t,r)=>t(...r))((...t)=>Object.assign({},...t)),a=((...t)=>t.reduce((t,r)=>(...n)=>r(t(...n))))(f(n),(function(t){var n;return(n={})[r(t[0])]=function(t){try{return JSON.parse(t)}catch(t){return}}(r(t[1])),n}));function p(r,e){var o=[];return o.push(r),[void 0,null,"",[],{}].some(c(e))||(o.push("?"),o.push(function(r){return Object.keys(r).map((function(e){return[t(e),n,t(JSON.stringify(r[e]))].join("")})).join("&")}(e))),o.join("")}function j(t){return function(t){if(!t)return{};var r=t.split("&").map(a);return l(r)}(t.split("?")[1]||"")}export{p as mixer,j as parser};
